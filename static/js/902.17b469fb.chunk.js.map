{"version":3,"file":"static/js/902.17b469fb.chunk.js","mappings":"8PACA,EAA+B,mCAA/B,EAAqF,uCAArF,EAAuI,+B,SCKjIA,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,4BAA8B,IAChDC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,4BAAoC,IAkF/D,EAhFqB,WAAO,IAADE,EAAAC,EACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAA2B,QAArBP,EAAe,QAAfC,EAACG,EAASI,aAAK,IAAAP,OAAA,EAAdA,EAAgBQ,YAAI,IAAAT,EAAAA,EAAI,KAEnDU,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAkCb,EAAAA,EAAAA,UAAS,GAAEc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAtCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA4BjB,EAAAA,EAAAA,UAAS,IAAGkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,IAExBG,EAAAA,EAAAA,YAAU,WACRC,EAAgB/B,EAClB,GAAG,CAACA,IAEJ,IAAM+B,EAAe,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAK,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGhB,OAHgBF,EAAAC,KAAA,EAE/BtB,GAAa,GACbI,EAAS,MAAMiB,EAAAE,KAAA,GACQC,EAAAA,EAAAA,GAAM,CAC3BC,OAAQ,MACRC,IAAI,sCAADC,OAAwCR,EAAK,8DAC/C,KAAD,EAHIC,EAAQC,EAAAO,KAIdhC,EAASwB,EAASS,MAClBrB,EAAasB,KAAKC,MAAmC,GAA7BX,EAASS,KAAKG,eACtCpB,EAAUQ,EAASS,KAAKlB,OAAOsB,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAI,IAAEC,KAAK,OAAOf,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAgB,GAAAhB,EAAA,SAEpEjB,EAAS,MAAM,QAEK,OAFLiB,EAAAC,KAAA,GAEftB,GAAa,GAAOqB,EAAAiB,OAAA,6BAAAjB,EAAAkB,OAAA,GAAArB,EAAA,yBAEvB,gBAhBoBsB,GAAA,OAAAzB,EAAA0B,MAAA,KAAAC,UAAA,KAkBrB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC/BC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI9D,EAAY+D,QAAQJ,UAC5BC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,cAEC,OAAV3C,IAAkB4C,EAAAA,EAAAA,KAAA,KAAAD,SAAI3C,IACtBJ,IAAagD,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eACN,OAAVnD,IAAmBI,IAClB4C,EAAAA,EAAAA,MAAAQ,EAAAA,SAAA,CAAAL,SAAA,EACEH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAqBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,OACEH,UAAWC,EACXO,IAAG,kCAAAzB,OAAoChC,EAAM0D,aAC7CC,IAAI,MAENX,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKnD,EAAM4D,SACXZ,EAAAA,EAAAA,MAAA,KAAAG,SAAA,CAAG,eAAavC,EAAU,QAC1BwC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAInD,EAAM6D,YACVT,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAInC,WAGRgC,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BACJH,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,OAAMH,SAAC,YAElBC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,UAASH,SAAC,wBAM7BC,EAAAA,EAAAA,KAACU,EAAAA,SAAQ,CAAAX,UACPH,EAAAA,EAAAA,MAACe,EAAAA,GAAM,CAAAZ,SAAA,EACLC,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CAACC,KAAK,OAAOC,SAASd,EAAAA,EAAAA,KAACrE,EAAI,OACjCqE,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CAACC,KAAK,UAAUC,SAASd,EAAAA,EAAAA,KAACnE,EAAO,aAKjD,ECjFA,EAJyB,SAAHmC,GAAsB,IAAhB+B,EAAQ/B,EAAR+B,SAC1B,OAAOC,EAAAA,EAAAA,KAACe,EAAY,CAAAhB,SAAEA,GACxB,C","sources":["webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","pages/MovieDetailsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieDetails\":\"MovieDetails_movieDetails__EqwEX\",\"movieMainDetails\":\"MovieDetails_movieMainDetails__AHaZw\",\"movieImg\":\"MovieDetails_movieImg__dR5Cx\"};","import axios from 'axios';\nimport { Suspense, lazy, useEffect, useRef, useState } from 'react';\nimport { Link, Route, Routes, useLocation, useParams } from 'react-router-dom';\n\nimport css from './MovieDetails.module.css';\n\nconst Cast = lazy(() => import('components/Cast/Cast'));\nconst Reviews = lazy(() => import('components/Reviews/Reviews'));\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [userScore, setUserScore] = useState(0);\n  const [genres, setGenres] = useState('');\n\n  useEffect(() => {\n    getMovieDetails(movieId);\n  }, [movieId]);\n\n  const getMovieDetails = async movId => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const response = await axios({\n        method: 'get',\n        url: `https://api.themoviedb.org/3/movie/${movId}?api_key=8dcc6c3444f0b089c2f82be63d0dc0e1&language=en-US`,\n      });\n      setMovie(response.data);\n      setUserScore(Math.round(response.data.vote_average * 10));\n      setGenres(response.data.genres.map(genre => genre.name).join(', '));\n    } catch (error) {\n      setError(null);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className={css.movieDetails}>\n      <Link to={backLinkRef.current}>\n        <button>Go back</button>\n      </Link>\n      {error !== null && <p>{error}</p>}\n      {isLoading && <p>Loading...</p>}\n      {movie !== null && !isLoading && (\n        <>\n          <div className={css.movieMainDetails}>\n            <img\n              className={css.movieImg}\n              src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n              alt=\"\"\n            />\n            <div>\n              <h1>{movie.title}</h1>\n              <p>User Score: {userScore}%</p>\n              <h2>Overview</h2>\n              <p>{movie.overview}</p>\n              <h3>Genres</h3>\n              <p>{genres}</p>\n            </div>\n          </div>\n          <div>\n            <h3>Additional Information</h3>\n            <ul>\n              <li>\n                <Link to=\"cast\">Cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">Reviews</Link>\n              </li>\n            </ul>\n          </div>\n        </>\n      )}\n      <Suspense>\n        <Routes>\n          <Route path=\"cast\" element={<Cast />} />\n          <Route path=\"reviews\" element={<Reviews />} />\n        </Routes>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import MovieDetails from 'components/MovieDetails/MovieDetails';\n\nconst MovieDetailsPage = ({ children }) => {\n  return <MovieDetails>{children}</MovieDetails>;\n};\n\nexport default MovieDetailsPage;\n"],"names":["Cast","lazy","Reviews","_location$state$from","_location$state","movieId","useParams","location","useLocation","backLinkRef","useRef","state","from","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","_useState7","_useState8","userScore","setUserScore","_useState9","_useState10","genres","setGenres","useEffect","getMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movId","response","_context","prev","next","axios","method","url","concat","sent","data","Math","round","vote_average","map","genre","name","join","t0","finish","stop","_x","apply","arguments","_jsxs","className","css","children","_jsx","Link","to","current","_Fragment","src","poster_path","alt","title","overview","Suspense","Routes","Route","path","element","MovieDetails"],"sourceRoot":""}